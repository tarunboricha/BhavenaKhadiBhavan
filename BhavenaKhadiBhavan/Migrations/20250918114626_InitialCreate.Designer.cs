// <auto-generated />
using System;
using BhavenaKhadiBhavan.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BhavenaKhadiBhavan.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250918114626_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BhavenaKhadiBhavan.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("IsActive");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 9, 18, 17, 16, 24, 113, DateTimeKind.Local).AddTicks(3419),
                            Description = "Traditional kurtas for men",
                            IsActive = true,
                            Name = "Men's Kurtas"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 9, 18, 17, 16, 24, 113, DateTimeKind.Local).AddTicks(3426),
                            Description = "Traditional kurtas for women",
                            IsActive = true,
                            Name = "Women's Kurtas"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 9, 18, 17, 16, 24, 113, DateTimeKind.Local).AddTicks(3428),
                            Description = "Traditional dhotis",
                            IsActive = true,
                            Name = "Dhotis"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 9, 18, 17, 16, 24, 113, DateTimeKind.Local).AddTicks(3430),
                            Description = "Traditional sarees",
                            IsActive = true,
                            Name = "Sarees"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 9, 18, 17, 16, 24, 113, DateTimeKind.Local).AddTicks(3431),
                            Description = "Khadi shirts",
                            IsActive = true,
                            Name = "Shirts"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 9, 18, 17, 16, 24, 113, DateTimeKind.Local).AddTicks(3433),
                            Description = "Khadi fabrics by meter",
                            IsActive = true,
                            Name = "Fabrics"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 9, 18, 17, 16, 24, 113, DateTimeKind.Local).AddTicks(3435),
                            Description = "Khadi accessories and bags",
                            IsActive = true,
                            Name = "Accessories"
                        });
                });

            modelBuilder.Entity("BhavenaKhadiBhavan.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("LastPurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("TotalOrders")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPurchases")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("Email");

                    b.HasIndex("Name");

                    b.HasIndex("Phone");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "456 MG Road, Mumbai, Maharashtra - 400001",
                            CreatedAt = new DateTime(2025, 9, 18, 17, 16, 24, 263, DateTimeKind.Local).AddTicks(1870),
                            Email = "rajesh@example.com",
                            Name = "Rajesh Kumar",
                            Phone = "9876543210",
                            TotalOrders = 0,
                            TotalPurchases = 0m
                        },
                        new
                        {
                            Id = 2,
                            Address = "789 Park Street, Delhi - 110001",
                            CreatedAt = new DateTime(2025, 9, 18, 17, 16, 24, 263, DateTimeKind.Local).AddTicks(1872),
                            Email = "priya@example.com",
                            Name = "Priya Sharma",
                            Phone = "9876543211",
                            TotalOrders = 0,
                            TotalPurchases = 0m
                        });
                });

            modelBuilder.Entity("BhavenaKhadiBhavan.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("FabricType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("GSTRate")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("MinimumStock")
                        .HasColumnType("decimal(10,3)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Pattern")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("PurchasePrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SKU")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("SalePrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Size")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("StockQuantity")
                        .HasColumnType("decimal(10,3)");

                    b.Property<string>("UnitOfMeasure")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("IsActive");

                    b.HasIndex("Name");

                    b.HasIndex("SKU");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Color = "White",
                            CreatedAt = new DateTime(2025, 9, 18, 17, 16, 24, 263, DateTimeKind.Local).AddTicks(1760),
                            Description = "Pure cotton khadi kurta in white color",
                            FabricType = "Cotton Khadi",
                            GSTRate = 5.0m,
                            IsActive = true,
                            MinimumStock = 5m,
                            Name = "Cotton Khadi Kurta - White",
                            Pattern = "Solid",
                            PurchasePrice = 400m,
                            SKU = "KHD-CK-W-001",
                            SalePrice = 650m,
                            Size = "M",
                            StockQuantity = 25m,
                            UnitOfMeasure = "Piece",
                            UpdatedAt = new DateTime(2025, 9, 18, 17, 16, 24, 263, DateTimeKind.Local).AddTicks(1762)
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 4,
                            Color = "Blue",
                            CreatedAt = new DateTime(2025, 9, 18, 17, 16, 24, 263, DateTimeKind.Local).AddTicks(1767),
                            Description = "Handwoven silk khadi saree in royal blue",
                            FabricType = "Silk Khadi",
                            GSTRate = 5.0m,
                            IsActive = true,
                            MinimumStock = 3m,
                            Name = "Silk Khadi Saree - Blue",
                            Pattern = "Handloom",
                            PurchasePrice = 1200m,
                            SKU = "KHD-SS-B-001",
                            SalePrice = 1800m,
                            Size = "Free Size",
                            StockQuantity = 15m,
                            UnitOfMeasure = "Piece",
                            UpdatedAt = new DateTime(2025, 9, 18, 17, 16, 24, 263, DateTimeKind.Local).AddTicks(1767)
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            Color = "Cream",
                            CreatedAt = new DateTime(2025, 9, 18, 17, 16, 24, 263, DateTimeKind.Local).AddTicks(1771),
                            Description = "Pure cotton dhoti in cream color",
                            FabricType = "Cotton Khadi",
                            GSTRate = 5.0m,
                            IsActive = true,
                            MinimumStock = 5m,
                            Name = "Traditional Dhoti - Cream",
                            Pattern = "Solid",
                            PurchasePrice = 300m,
                            SKU = "KHD-D-C-001",
                            SalePrice = 480m,
                            Size = "Free Size",
                            StockQuantity = 20m,
                            UnitOfMeasure = "Piece",
                            UpdatedAt = new DateTime(2025, 9, 18, 17, 16, 24, 263, DateTimeKind.Local).AddTicks(1772)
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            Color = "Pink",
                            CreatedAt = new DateTime(2025, 9, 18, 17, 16, 24, 263, DateTimeKind.Local).AddTicks(1775),
                            Description = "Cotton khadi kurta for women in pink",
                            FabricType = "Cotton Khadi",
                            GSTRate = 5.0m,
                            IsActive = true,
                            MinimumStock = 8m,
                            Name = "Women's Khadi Kurta - Pink",
                            Pattern = "Printed",
                            PurchasePrice = 380m,
                            SKU = "KHD-WK-P-001",
                            SalePrice = 580m,
                            Size = "L",
                            StockQuantity = 30m,
                            UnitOfMeasure = "Piece",
                            UpdatedAt = new DateTime(2025, 9, 18, 17, 16, 24, 263, DateTimeKind.Local).AddTicks(1776)
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 6,
                            Color = "Natural",
                            CreatedAt = new DateTime(2025, 9, 18, 17, 16, 24, 263, DateTimeKind.Local).AddTicks(1800),
                            Description = "Pure khadi cotton fabric per meter",
                            FabricType = "Cotton Khadi",
                            GSTRate = 5.0m,
                            IsActive = true,
                            MinimumStock = 20m,
                            Name = "Khadi Cotton Fabric",
                            Pattern = "Plain",
                            PurchasePrice = 80m,
                            SKU = "KHD-CF-N-001",
                            SalePrice = 120m,
                            Size = "Per Meter",
                            StockQuantity = 100m,
                            UnitOfMeasure = "Piece",
                            UpdatedAt = new DateTime(2025, 9, 18, 17, 16, 24, 263, DateTimeKind.Local).AddTicks(1805)
                        });
                });

            modelBuilder.Entity("BhavenaKhadiBhavan.Models.Return", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("DiscountAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GSTAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReturnNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SaleId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("SubTotal")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ReturnDate");

                    b.HasIndex("ReturnNumber")
                        .IsUnique();

                    b.HasIndex("SaleId");

                    b.HasIndex("Status");

                    b.ToTable("Returns");
                });

            modelBuilder.Entity("BhavenaKhadiBhavan.Models.ReturnItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("DiscountAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GSTAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GSTRate")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("LineTotal")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("ReturnId")
                        .HasColumnType("int");

                    b.Property<decimal>("ReturnQuantity")
                        .HasColumnType("decimal(10,3)");

                    b.Property<int>("SaleItemId")
                        .HasColumnType("int");

                    b.Property<string>("UnitOfMeasure")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("ReturnId");

                    b.HasIndex("SaleItemId");

                    b.ToTable("ReturnItems");
                });

            modelBuilder.Entity("BhavenaKhadiBhavan.Models.Sale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CustomerPhone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<decimal>("DiscountAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DiscountPercentage")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("GSTAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("InvoiceNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Notes")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SaleDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("SubTotal")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("InvoiceNumber")
                        .IsUnique();

                    b.HasIndex("SaleDate");

                    b.HasIndex("Status");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("BhavenaKhadiBhavan.Models.SaleItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("GSTAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GSTRate")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("LineTotal")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(10,3)");

                    b.Property<decimal>("ReturnedQuantity")
                        .HasColumnType("decimal(10,3)");

                    b.Property<int>("SaleId")
                        .HasColumnType("int");

                    b.Property<string>("UnitOfMeasure")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("SaleId");

                    b.ToTable("SaleItems");
                });

            modelBuilder.Entity("BhavenaKhadiBhavan.Models.Setting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("Category");

                    b.HasIndex("Key")
                        .IsUnique();

                    b.ToTable("Settings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Store",
                            Description = "Store name for invoices",
                            Key = "StoreName",
                            UpdatedAt = new DateTime(2025, 9, 18, 17, 16, 24, 263, DateTimeKind.Local).AddTicks(1665),
                            Value = "Khadi Store"
                        },
                        new
                        {
                            Id = 2,
                            Category = "Store",
                            Description = "Store address",
                            Key = "StoreAddress",
                            UpdatedAt = new DateTime(2025, 9, 18, 17, 16, 24, 263, DateTimeKind.Local).AddTicks(1669),
                            Value = "123 Gandhi Road, City, State - 400001"
                        },
                        new
                        {
                            Id = 3,
                            Category = "Store",
                            Description = "Store phone number",
                            Key = "StorePhone",
                            UpdatedAt = new DateTime(2025, 9, 18, 17, 16, 24, 263, DateTimeKind.Local).AddTicks(1671),
                            Value = "+91 98765 43210"
                        },
                        new
                        {
                            Id = 4,
                            Category = "Store",
                            Description = "Store email",
                            Key = "StoreEmail",
                            UpdatedAt = new DateTime(2025, 9, 18, 17, 16, 24, 263, DateTimeKind.Local).AddTicks(1672),
                            Value = "info@khadistore.com"
                        },
                        new
                        {
                            Id = 5,
                            Category = "Tax",
                            Description = "Store GST number",
                            Key = "GSTNumber",
                            UpdatedAt = new DateTime(2025, 9, 18, 17, 16, 24, 263, DateTimeKind.Local).AddTicks(1673),
                            Value = "27AAAAA0000A1Z5"
                        },
                        new
                        {
                            Id = 6,
                            Category = "Store",
                            Description = "Invoice number prefix",
                            Key = "InvoicePrefix",
                            UpdatedAt = new DateTime(2025, 9, 18, 17, 16, 24, 263, DateTimeKind.Local).AddTicks(1674),
                            Value = "KHD"
                        },
                        new
                        {
                            Id = 7,
                            Category = "Store",
                            Description = "Return number prefix",
                            Key = "ReturnPrefix",
                            UpdatedAt = new DateTime(2025, 9, 18, 17, 16, 24, 263, DateTimeKind.Local).AddTicks(1676),
                            Value = "RET"
                        },
                        new
                        {
                            Id = 8,
                            Category = "Tax",
                            Description = "Default GST rate percentage",
                            Key = "DefaultGSTRate",
                            UpdatedAt = new DateTime(2025, 9, 18, 17, 16, 24, 263, DateTimeKind.Local).AddTicks(1677),
                            Value = "5.0"
                        },
                        new
                        {
                            Id = 9,
                            Category = "Inventory",
                            Description = "Default low stock threshold",
                            Key = "LowStockThreshold",
                            UpdatedAt = new DateTime(2025, 9, 18, 17, 16, 24, 263, DateTimeKind.Local).AddTicks(1678),
                            Value = "5"
                        },
                        new
                        {
                            Id = 10,
                            Category = "Store",
                            Description = "Store currency",
                            Key = "Currency",
                            UpdatedAt = new DateTime(2025, 9, 18, 17, 16, 24, 263, DateTimeKind.Local).AddTicks(1679),
                            Value = "INR"
                        });
                });

            modelBuilder.Entity("BhavenaKhadiBhavan.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("IsActive");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 9, 18, 17, 16, 24, 263, DateTimeKind.Local).AddTicks(1231),
                            Email = "admin@khadistore.com",
                            FullName = "Store Administrator",
                            IsActive = true,
                            PasswordHash = "$2a$11$q0EqzaZ3eezonKLS5MWd8.CeIPbKj9GdNbom5oCyf/8dVmec.CdE.",
                            Role = "Admin",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("BhavenaKhadiBhavan.Models.Product", b =>
                {
                    b.HasOne("BhavenaKhadiBhavan.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("BhavenaKhadiBhavan.Models.Return", b =>
                {
                    b.HasOne("BhavenaKhadiBhavan.Models.Sale", "Sale")
                        .WithMany("Returns")
                        .HasForeignKey("SaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sale");
                });

            modelBuilder.Entity("BhavenaKhadiBhavan.Models.ReturnItem", b =>
                {
                    b.HasOne("BhavenaKhadiBhavan.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BhavenaKhadiBhavan.Models.Return", "Return")
                        .WithMany("ReturnItems")
                        .HasForeignKey("ReturnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BhavenaKhadiBhavan.Models.SaleItem", "SaleItem")
                        .WithMany("ReturnItems")
                        .HasForeignKey("SaleItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Return");

                    b.Navigation("SaleItem");
                });

            modelBuilder.Entity("BhavenaKhadiBhavan.Models.Sale", b =>
                {
                    b.HasOne("BhavenaKhadiBhavan.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("BhavenaKhadiBhavan.Models.SaleItem", b =>
                {
                    b.HasOne("BhavenaKhadiBhavan.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BhavenaKhadiBhavan.Models.Sale", "Sale")
                        .WithMany("SaleItems")
                        .HasForeignKey("SaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Sale");
                });

            modelBuilder.Entity("BhavenaKhadiBhavan.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("BhavenaKhadiBhavan.Models.Return", b =>
                {
                    b.Navigation("ReturnItems");
                });

            modelBuilder.Entity("BhavenaKhadiBhavan.Models.Sale", b =>
                {
                    b.Navigation("Returns");

                    b.Navigation("SaleItems");
                });

            modelBuilder.Entity("BhavenaKhadiBhavan.Models.SaleItem", b =>
                {
                    b.Navigation("ReturnItems");
                });
#pragma warning restore 612, 618
        }
    }
}
