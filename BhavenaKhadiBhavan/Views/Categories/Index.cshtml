@model List<Category>
@{
    ViewData["Title"] = "Categories";
}

<div class="container-fluid">
    <!-- Header -->
    <div class="row mb-3">
        <div class="col-12">
            <h2>
                <i class="fas fa-tags me-2 text-primary"></i>
                Categories Management
            </h2>
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item active">Categories</li>
                </ol>
            </nav>
            <div class="d-flex justify-content-between align-items-center">
                <p class="text-muted mb-0">Manage product categories and organization</p>
                <a href="@Url.Action("Create")" class="btn btn-success">
                    <i class="fas fa-plus me-2"></i>Add Category
                </a>
            </div>
            <hr>
        </div>
    </div>

    @if (Model.Any())
    {
        <!-- Summary Cards -->
        <div class="row mb-4">
            <div class="col-md-3">
                <div class="card border-primary shadow">
                    <div class="card-body text-center">
                        <i class="fas fa-tags fa-2x text-primary mb-2"></i>
                        <h3 class="text-primary">@Model.Count</h3>
                        <p class="mb-0">Total Categories</p>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card border-success shadow">
                    <div class="card-body text-center">
                        <i class="fas fa-check-circle fa-2x text-success mb-2"></i>
                        <h3 class="text-success">@Model.Count(c => c.IsActive)</h3>
                        <p class="mb-0">Active Categories</p>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card border-info shadow">
                    <div class="card-body text-center">
                        <i class="fas fa-cube fa-2x text-info mb-2"></i>
                        <h3 class="text-info">@Model.Sum(c => c.Products.Count)</h3>
                        <p class="mb-0">Total Products</p>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card border-warning shadow">
                    <div class="card-body text-center">
                        <i class="fas fa-exclamation-triangle fa-2x text-warning mb-2"></i>
                        <h3 class="text-warning">@Model.Count(c => !c.Products.Any())</h3>
                        <p class="mb-0">Empty Categories</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Categories Grid View -->
        <div class="row mb-4">
            @foreach (var category in Model.Where(c => c.IsActive).OrderBy(c => c.Name))
            {
                <div class="col-lg-4 col-md-6 mb-4">
                    <div class="card shadow category-card h-100">
                        <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                            <h5 class="mb-0">
                                <i class="fas fa-tag me-2"></i>@category.Name
                            </h5>
                            <span class="badge bg-light text-dark">@category.Products.Count products</span>
                        </div>
                        <div class="card-body">
                            @if (!string.IsNullOrEmpty(category.Description))
                            {
                                <p class="card-text text-muted">@category.Description</p>
                            }
                            else
                            {
                                <p class="card-text text-muted font-italic">No description provided.</p>
                            }

                            <!-- Category Stats -->
                            <div class="row text-center mt-3">
                                <div class="col-4">
                                    <div class="border-end">
                                        <strong class="text-info">@category.Products.Count</strong>
                                        <div class="small text-muted">Products</div>
                                    </div>
                                </div>
                                <div class="col-4">
                                    <div class="border-end">
                                        <strong class="text-success">@category.Products.Count(p => p.IsActive)</strong>
                                        <div class="small text-muted">Active</div>
                                    </div>
                                </div>
                                <div class="col-4">
                                    <strong class="text-warning">@category.Products.Count(p => p.IsLowStock)</strong>
                                    <div class="small text-muted">Low Stock</div>
                                </div>
                            </div>

                            <!-- Recent Products -->
                            @if (category.Products.Any())
                            {
                                <hr>
                                <div class="small">
                                    <strong class="text-muted">Recent Products:</strong>
                                    <div class="mt-2">
                                        @foreach (var product in category.Products.Where(p => p.IsActive).OrderByDescending(p => p.CreatedAt).Take(3))
                                        {
                                            <span class="badge bg-light text-dark me-1 mb-1">@product.Name</span>
                                        }
                                        @if (category.Products.Count > 3)
                                        {
                                            <span class="text-muted">... and @(category.Products.Count - 3) more</span>
                                        }
                                    </div>
                                </div>
                            }
                        </div>
                        <div class="card-footer bg-light">
                            <div class="d-flex justify-content-between align-items-center">
                                <small class="text-muted">
                                    <i class="fas fa-calendar me-1"></i>
                                    Created @category.CreatedAt.ToString("MMM dd, yyyy")
                                </small>
                                <div class="btn-group btn-group-sm">
                                    <a href="@Url.Action("Details", new { id = category.Id })"
                                       class="btn btn-outline-info" title="View Details">
                                        <i class="fas fa-eye"></i>
                                    </a>
                                    <a href="@Url.Action("Edit", new { id = category.Id })"
                                       class="btn btn-outline-primary" title="Edit">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                    @if (!category.Products.Any())
                                    {
                                        <button type="button" class="btn btn-outline-danger"
                                                onclick="confirmDelete(@category.Id, '@category.Name')" title="Delete">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

        @if (Model.Any(c => !c.IsActive))
        {
            <!-- Inactive Categories -->
            <div class="card shadow">
                <div class="card-header bg-secondary text-white">
                    <h5 class="mb-0">
                        <i class="fas fa-archive me-2"></i>
                        Inactive Categories (@Model.Count(c => !c.IsActive))
                    </h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead class="table-light">
                                <tr>
                                    <th>Category Name</th>
                                    <th>Description</th>
                                    <th>Products</th>
                                    <th>Created Date</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var category in Model.Where(c => !c.IsActive).OrderBy(c => c.Name))
                                {
                                    <tr>
                                        <td>
                                            <strong class="text-muted">@category.Name</strong>
                                            <br><small class="text-danger">Inactive</small>
                                        </td>
                                        <td>@(category.Description ?? "No description")</td>
                                        <td>
                                            <span class="badge bg-secondary">@category.Products.Count</span>
                                            @if (category.Products.Any(p => p.IsActive))
                                            {
                                                <br>
                                
                                                <small class="text-warning">Has active products</small>
                                            }
                                        </td>
                                        <td>@category.CreatedAt.ToString("dd/MM/yyyy")</td>
                                        <td>
                                            <div class="btn-group btn-group-sm">
                                                <a href="@Url.Action("Details", new { id = category.Id })"
                                                   class="btn btn-outline-info" title="View Details">
                                                    <i class="fas fa-eye"></i>
                                                </a>
                                                <a href="@Url.Action("Edit", new { id = category.Id })"
                                                   class="btn btn-outline-primary" title="Edit">
                                                    <i class="fas fa-edit"></i>
                                                </a>
                                                <button type="button" class="btn btn-outline-success"
                                                        onclick="activateCategory(@category.Id, '@category.Name')" title="Activate">
                                                    <i class="fas fa-check"></i>
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <!-- Empty State -->
        <div class="row">
            <div class="col-12">
                <div class="card shadow">
                    <div class="card-body text-center py-5">
                        <i class="fas fa-tags fa-4x text-muted mb-4"></i>
                        <h4 class="text-muted">No Categories Found</h4>
                        <p class="text-muted mb-4">Create your first product category to get started with organizing your inventory.</p>
                        <div class="btn-group">
                            <a href="@Url.Action("Create")" class="btn btn-success btn-lg">
                                <i class="fas fa-plus me-2"></i>Create First Category
                            </a>
                        </div>

                        <div class="mt-4">
                            <small class="text-muted">
                                <strong>Category Examples:</strong> Men's Wear, Women's Wear, Khadi Shirts, Traditional Wear, Accessories
                            </small>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title">
                    <i class="fas fa-exclamation-triangle me-2"></i>Confirm Delete
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete the category "<strong id="categoryNameToDelete"></strong>"?</p>
                <div class="alert alert-warning">
                    <i class="fas fa-info-circle me-2"></i>
                    This action cannot be undone. Make sure this category has no products before deleting.
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <form method="post" style="display: inline;" id="deleteForm">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-danger">
                        <i class="fas fa-trash me-1"></i>Delete Category
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function confirmDelete(categoryId, categoryName) {
            $('#categoryNameToDelete').text(categoryName);
            $('#deleteForm').attr('action', '@Url.Action("Delete")/' + categoryId);

            const modal = new bootstrap.Modal(document.getElementById('deleteModal'));
            modal.show();
        }

        function activateCategory(categoryId, categoryName) {
            if (confirm('Are you sure you want to activate the category "' + categoryName + '"?')) {
                // Here you would typically send an AJAX request to activate
                // For now, redirect to edit page
                window.location.href = '@Url.Action("Edit")/' + categoryId + '?activate=true';
            }
        }

        // Initialize tooltips
        $(function () {
            $('[title]').tooltip();
        });

        // Add hover effects
        $('.category-card').hover(
            function() {
                $(this).addClass('shadow-lg');
            },
            function() {
                $(this).removeClass('shadow-lg');
            }
        );

        // Search functionality (if needed in the future)
        function filterCategories(searchTerm) {
            const cards = $('.category-card');

            if (!searchTerm) {
                cards.show();
                return;
            }

            cards.each(function() {
                const categoryName = $(this).find('h5').text().toLowerCase();
                const description = $(this).find('.card-text').text().toLowerCase();

                if (categoryName.includes(searchTerm.toLowerCase()) ||
                    description.includes(searchTerm.toLowerCase())) {
                    $(this).parent().show();
                } else {
                    $(this).parent().hide();
                }
            });
        }
    </script>

    <style>
        .category-card {
            transition: all 0.3s ease;
            cursor: pointer;
        }

            .category-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 8px 16px rgba(0,0,0,0.15) !important;
            }

        .border-end {
            border-right: 1px solid #dee2e6 !important;
        }

        .table-hover tbody tr:hover {
            background-color: #f8f9fa;
        }

        .btn-group-sm > .btn {
            padding: 0.25rem 0.5rem;
            font-size: 0.875rem;
        }

        .card-footer {
            background-color: rgba(0,0,0,0.03) !important;
        }

        .badge {
            font-size: 0.75em;
        }

        /* Category color coding */
        .card-header.bg-primary {
            background: linear-gradient(45deg, #007bff, #0056b3) !important;
        }

        .font-italic {
            font-style: italic;
        }

        @@media (max-width: 768px) {
            .border-end

        {
            border-right: none !important;
            border-bottom: 1px solid #dee2e6 !important;
            padding-bottom: 0.5rem;
            margin-bottom: 0.5rem;
        }

        .btn-group {
            flex-direction: column;
            width: 100%;
        }

            .btn-group > .btn {
                margin-bottom: 0.25rem;
            }

        .card-body {
            padding: 1rem;
        }

        .table-responsive {
            font-size: 0.875rem;
        }

        }

        /* Loading animation for cards */
        @@keyframes fadeInUp {
            from

        {
            opacity: 0;
            transform: translateY(20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }

        }

        .category-card {
            animation: fadeInUp 0.5s ease forwards;
        }

            /* Stagger animation for multiple cards */
            .category-card:nth-child(1) {
                animation-delay: 0.1s;
            }

            .category-card:nth-child(2) {
                animation-delay: 0.2s;
            }

            .category-card:nth-child(3) {
                animation-delay: 0.3s;
            }

            .category-card:nth-child(4) {
                animation-delay: 0.4s;
            }

            .category-card:nth-child(5) {
                animation-delay: 0.5s;
            }

            .category-card:nth-child(6) {
                animation-delay: 0.6s;
            }
    </style>
}