@model Customer
@{
    ViewData["Title"] = Model.Id > 0 ? "Edit Customer" : "Add Customer";
    var isEdit = Model.Id > 0;
}

<div class="container-fluid">
    <!-- Header -->
    <div class="row mb-3">
        <div class="col-12">
            <h2>
                <i class="fas fa-@(isEdit ? "edit" : "user-plus") me-2 text-primary"></i>
                @(isEdit ? "Edit Customer" : "Add New Customer")
            </h2>
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item">
                        <a href="@Url.Action("Index")">
                            <i class="fas fa-users me-1"></i>Customers
                        </a>
                    </li>
                    @if (isEdit)
                    {
                        <li class="breadcrumb-item">
                            <a href="@Url.Action("Details", new { id = Model.Id })">@Model.Name</a>
                        </li>
                        <li class="breadcrumb-item active">Edit</li>
                    }
                    else
                    {
                        <li class="breadcrumb-item active">Add New</li>
                    }
                </ol>
            </nav>
            <hr>
        </div>
    </div>

    <div class="row">
        <!-- Left Column: Customer Form -->
        <div class="col-lg-8">
            <form asp-action="@(isEdit ? "Edit" : "Create")" method="post" id="customerForm">
                @Html.AntiForgeryToken()
                @if (isEdit)
                {
                    <input type="hidden" asp-for="Id" />
                    <input type="hidden" asp-for="CreatedAt" />
                    <input type="hidden" asp-for="TotalOrders" />
                    <input type="hidden" asp-for="TotalPurchases" />
                    <input type="hidden" asp-for="LastPurchaseDate" />
                }

                <!-- Basic Information -->
                <div class="card shadow mb-4">
                    <div class="card-header bg-primary text-white">
                        <h5 class="mb-0">
                            <i class="fas fa-user me-2"></i>Customer Information
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label asp-for="Name" class="form-label">Full Name *</label>
                                <div class="input-group">
                                    <span class="input-group-text">
                                        <i class="fas fa-user"></i>
                                    </span>
                                    <input asp-for="Name" class="form-control" placeholder="Enter customer's full name" required>
                                </div>
                                <span asp-validation-for="Name" class="text-danger"></span>
                                <small class="form-text text-muted">Customer's full legal name</small>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label asp-for="Phone" class="form-label">Phone Number</label>
                                <div class="input-group">
                                    <span class="input-group-text">
                                        <i class="fas fa-phone"></i>
                                    </span>
                                    <input asp-for="Phone" class="form-control" type="tel" 
                                           placeholder="10-digit mobile number" maxlength="10" 
                                           pattern="[0-9]{10}" title="Enter 10-digit mobile number">
                                </div>
                                <span asp-validation-for="Phone" class="text-danger"></span>
                                <small class="form-text text-muted">10-digit Indian mobile number</small>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label asp-for="Email" class="form-label">Email Address</label>
                                <div class="input-group">
                                    <span class="input-group-text">
                                        <i class="fas fa-envelope"></i>
                                    </span>
                                    <input asp-for="Email" class="form-control" type="email" 
                                           placeholder="customer@example.com">
                                </div>
                                <span asp-validation-for="Email" class="text-danger"></span>
                                <small class="form-text text-muted">Optional - for sending receipts</small>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label class="form-label">Customer Type</label>
                                <div class="input-group">
                                    <span class="input-group-text">
                                        <i class="fas fa-tag"></i>
                                    </span>
                                    <input type="text" class="form-control" value="@Model.CustomerType" readonly>
                                </div>
                                <small class="form-text text-muted">Auto-calculated based on purchase history</small>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Address" class="form-label">Address</label>
                            <div class="input-group">
                                <span class="input-group-text">
                                    <i class="fas fa-map-marker-alt"></i>
                                </span>
                                <textarea asp-for="Address" class="form-control" rows="3" 
                                          placeholder="Customer's complete address..."></textarea>
                            </div>
                            <span asp-validation-for="Address" class="text-danger"></span>
                            <small class="form-text text-muted">Complete address with pin code</small>
                        </div>
                    </div>
                </div>

                <!-- Form Actions -->
                <div class="card shadow">
                    <div class="card-header bg-success text-white">
                        <h5 class="mb-0">
                            <i class="fas fa-save me-2"></i>Save Customer
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-center flex-wrap">
                            <div class="form-check form-switch mb-3">
                                <input type="hidden" asp-for="CreatedAt" value="@DateTime.Now" />
                                <small class="text-muted">
                                    <i class="fas fa-info-circle me-1"></i>
                                    All fields except name are optional. You can update them later.
                                </small>
                            </div>
                            <div class="btn-group">
                                <button type="submit" class="btn btn-success btn-lg">
                                    <i class="fas fa-save me-2"></i>
                                    @(isEdit ? "Update Customer" : "Save Customer")
                                </button>
                                
                                @if (isEdit)
                                {
                                    <a href="@Url.Action("Details", new { id = Model.Id })" class="btn btn-outline-info">
                                        <i class="fas fa-eye me-2"></i>View Details
                                    </a>
                                }

                                <a href="@Url.Action("Index")" class="btn btn-outline-secondary">
                                    <i class="fas fa-arrow-left me-2"></i>Cancel
                                </a>
                            </div>
                        </div>

                        @if (isEdit)
                        {
                            <hr>
                            <small class="text-muted">
                                <i class="fas fa-clock me-1"></i>
                                Customer since: @Model.CreatedAt.ToString("dd MMMM yyyy")
                            </small>
                        }
                    </div>
                </div>
            </form>
        </div>

        <!-- Right Column: Information & Preview -->
        <div class="col-lg-4">
            @if (isEdit)
            {
                <!-- Current Customer Stats -->
                <div class="card shadow mb-4">
                    <div class="card-header bg-info text-white">
                        <h5 class="mb-0">
                            <i class="fas fa-chart-bar me-2"></i>Customer Statistics
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="row text-center">
                            <div class="col-6">
                                <div class="border-end">
                                    <h4 class="text-primary">@Model.TotalOrders</h4>
                                    <small>Total Orders</small>
                                </div>
                            </div>
                            <div class="col-6">
                                <h4 class="text-success">₹@Model.TotalPurchases.ToString("N0")</h4>
                                <small>Total Spent</small>
                            </div>
                        </div>

                        <hr>

                        <div class="text-center">
                            @{
                                var badgeClass = Model.CustomerType switch
                                {
                                    "New" => "bg-info",
                                    "Second-time" => "bg-warning text-dark",
                                    "Regular" => "bg-success",
                                    "Loyal" => "bg-primary",
                                    _ => "bg-secondary"
                                };
                            }
                            <span class="badge @badgeClass fs-6">@Model.CustomerType Customer</span>
                        </div>

                        @if (Model.LastPurchaseDate.HasValue)
                        {
                            <hr>
                            <div class="text-center">
                                <small class="text-muted">Last Purchase</small>
                                <div class="@(Model.DaysSinceLastPurchase <= 30 ? "text-success" : Model.DaysSinceLastPurchase <= 90 ? "text-warning" : "text-danger")">
                                    @Model.LastPurchaseDate.Value.ToString("dd MMM yyyy")
                                    <br><small>(@Model.DaysSinceLastPurchase days ago)</small>
                                </div>
                            </div>
                        }

                        @if (Model.AverageOrderValue > 0)
                        {
                            <hr>
                            <div class="text-center">
                                <small class="text-muted">Average Order Value</small>
                                <div class="text-info">
                                    <strong>₹@Model.AverageOrderValue.ToString("N0")</strong>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }

            <!-- Form Guidelines -->
            <div class="card shadow mb-4">
                <div class="card-header bg-warning text-dark">
                    <h5 class="mb-0">
                        <i class="fas fa-lightbulb me-2"></i>Guidelines
                    </h5>
                </div>
                <div class="card-body">
                    <div class="alert alert-info">
                        <h6><i class="fas fa-info-circle me-2"></i>Required Information</h6>
                        <ul class="mb-0">
                            <li><strong>Name:</strong> Required for all customers</li>
                            <li><strong>Phone:</strong> Recommended for contact</li>
                            <li><strong>Email:</strong> Optional, useful for receipts</li>
                            <li><strong>Address:</strong> Optional, for delivery</li>
                        </ul>
                    </div>

                    <div class="alert alert-success">
                        <h6><i class="fas fa-phone me-2"></i>Phone Number Tips</h6>
                        <ul class="mb-0">
                            <li>Enter 10-digit mobile number</li>
                            <li>Used for customer identification</li>
                            <li>Helps in quick customer lookup during sales</li>
                        </ul>
                    </div>

                    @if (!isEdit)
                    {
                        <div class="alert alert-warning">
                            <h6><i class="fas fa-user-plus me-2"></i>New Customer</h6>
                            <ul class="mb-0">
                                <li>Customer type will be "New" initially</li>
                                <li>Statistics will update after first purchase</li>
                                <li>You can create a sale immediately after saving</li>
                            </ul>
                        </div>
                    }
                </div>
            </div>

            <!-- Quick Actions -->
            <div class="card shadow">
                <div class="card-header bg-dark text-white">
                    <h5 class="mb-0">
                        <i class="fas fa-tools me-2"></i>Quick Actions
                    </h5>
                </div>
                <div class="card-body">
                    <div class="d-grid gap-2">
                        @if (isEdit)
                        {
                            <a href="@Url.Action("Create", "Sales")?customerId=@Model.Id" class="btn btn-success">
                                <i class="fas fa-shopping-cart me-2"></i>Create Sale
                            </a>

                            <a href="@Url.Action("Details", new { id = Model.Id })" class="btn btn-info">
                                <i class="fas fa-eye me-2"></i>View Full Details
                            </a>
                        }
                        else
                        {
                            <div class="text-muted text-center">
                                <i class="fas fa-info-circle me-1"></i>
                                More actions will be available after saving the customer
                            </div>
                        }

                        <hr>

                        <a href="@Url.Action("Index")" class="btn btn-outline-secondary">
                            <i class="fas fa-users me-2"></i>View All Customers
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
<script>
    $(document).ready(function() {
        // Phone number validation
        $('#Phone').on('input', function() {
            let value = $(this).val();
            
            // Remove non-digits
            value = value.replace(/\D/g, '');
            
            // Limit to 10 digits
            if (value.length > 10) {
                value = value.substr(0, 10);
            }
            
            $(this).val(value);
            
            // Validate
            const isValid = value.length === 10 || value.length === 0;
            
            if (isValid) {
                $(this).removeClass('is-invalid').addClass(value.length === 10 ? 'is-valid' : '');
                $('#phoneError').hide();
            } else {
                $(this).removeClass('is-valid').addClass('is-invalid');
            }
        });

        // Form validation
        $('#customerForm').on('submit', function(e) {
            const name = $('#Name').val().trim();
            const phone = $('#Phone').val().trim();
            const email = $('#Email').val().trim();
            
            if (!name) {
                e.preventDefault();
                alert('Customer name is required.');
                $('#Name').focus();
                return false;
            }

            if (phone && phone.length !== 10) {
                e.preventDefault();
                alert('Please enter a valid 10-digit mobile number or leave it blank.');
                $('#Phone').focus();
                return false;
            }

            // Show loading state
            $(this).find('button[type="submit"]').prop('disabled', true)
                   .html('<i class="fas fa-spinner fa-spin me-2"></i>Saving...');
        });

        // Auto-resize textarea
        $('textarea').on('input', function() {
            this.style.height = 'auto';
            this.style.height = (this.scrollHeight) + 'px';
        });

        // Name input formatting
        $('#Name').on('blur', function() {
            let value = $(this).val();
            // Capitalize first letter of each word
            value = value.replace(/\w\S*/g, function(txt) {
                return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();
            });
            $(this).val(value);
        });

        // Check for duplicate phone number
        $('#Phone').on('blur', function() {
            const phone = $(this).val();
            @if (!isEdit)
            {
                <text>
                if (phone && phone.length === 10) {
                    // You can add AJAX call here to check for duplicate phone numbers
                    // This is a placeholder for the functionality
                    console.log('Checking for duplicate phone:', phone);
                }
                </text>
            }
        });
    });

    // Add input validation classes for better UX
    function addValidationClasses() {
        $('.form-control').on('input blur', function() {
            const input = $(this);
            const value = input.val().trim();
            
            if (input.prop('required')) {
                if (value) {
                    input.removeClass('is-invalid').addClass('is-valid');
                } else {
                    input.removeClass('is-valid').addClass('is-invalid');
                }
            } else if (value) {
                // Optional fields with content
                if (input.attr('type') === 'email') {
                    if (isValidEmail(value)) {
                        input.removeClass('is-invalid').addClass('is-valid');
                    } else {
                        input.removeClass('is-valid').addClass('is-invalid');
                    }
                } else if (input.attr('type') === 'tel') {
                    if (value.length === 10) {
                        input.removeClass('is-invalid').addClass('is-valid');
                    } else {
                        input.removeClass('is-valid').addClass('is-invalid');
                    }
                } else {
                    input.removeClass('is-invalid').addClass('is-valid');
                }
            } else {
                input.removeClass('is-valid is-invalid');
            }
        });
    }

    // Initialize validation
    addValidationClasses();
</script>

<style>
    .form-label {
        font-weight: 600;
        color: #495057;
    }

    .form-control:focus,
    .form-select:focus {
        border-color: #80bdff;
        box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
    }

    .input-group-text {
        background-color: #f8f9fa;
        border-color: #ced4da;
        font-weight: 500;
        width: 45px;
        justify-content: center;
    }

    .card {
        transition: all 0.3s ease;
    }

    .card:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0,0,0,0.15) !important;
    }

    .border-end {
        border-right: 1px solid #dee2e6 !important;
    }

    .is-valid {
        border-color: #198754;
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3e%3cpath fill='%23198754' d='m2.3 6.73.94-.94 2.94 2.94L9.11 5.8l.94.94L6.11 9.67z'/%3e%3c/svg%3e");
        background-repeat: no-repeat;
        background-position: right calc(0.375em + 0.1875rem) center;
        background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
    }

    .is-invalid {
        border-color: #dc3545;
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 12 12' width='12' height='12' fill='none' stroke='%23dc3545'%3e%3ccircle cx='6' cy='6' r='4.5'/%3e%3cpath d='m5.8 4.6 1.4 1.4 1.4-1.4M8.6 5.8 7.2 7.2l1.4 1.4'/%3e%3c/svg%3e");
        background-repeat: no-repeat;
        background-position: right calc(0.375em + 0.1875rem) center;
        background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
    }

    @@media (max-width: 768px) {
        .border-end {
            border-right: none !important;
            border-bottom: 1px solid #dee2e6 !important;
            padding-bottom: 1rem;
            margin-bottom: 1rem;
        }

        .btn-group {
            flex-direction: column;
            width: 100%;
        }

        .btn-group > .btn {
            margin-bottom: 0.5rem;
        }

        .card-body {
            padding: 1rem;
        }
    }
</style>
}