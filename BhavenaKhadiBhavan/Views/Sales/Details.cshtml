@model Sale
@{
    ViewData["Title"] = $"Sale Details - {Model.InvoiceNumber}";
    var discountSummary = ViewBag.DiscountSummary;
    var returnableQuantities = ViewBag.ReturnableQuantities as Dictionary<int, decimal> ?? new Dictionary<int, decimal>();
    var hasReturnableItems = ViewBag.HasReturnableItems as bool? ?? false;
}

<div class="row mb-4">
    <div class="col-12">
        <div class="d-flex justify-content-between align-items-center">
            <h2>
                <i class="fas fa-receipt me-2"></i>
                Sale Details - @Model.InvoiceNumber
                <span class="badge @(Model.Status == "Completed" ? "bg-success" : "bg-warning") ms-2">
                    @Model.Status
                </span>
            </h2>
            <div>
                @if (hasReturnableItems)
                {
                    <a href="@Url.Action("Create", "Returns", new { saleId = Model.Id })" class="btn btn-warning">
                        <i class="fas fa-undo me-1"></i>Process Return
                    </a>
                }
                <a href="@Url.Action("PrintInvoice", "Sales", new { id = Model.Id })"
                   class="btn btn-outline-secondary" target="_blank">
                    <i class="fas fa-print me-1"></i>Print Invoice
                </a>
                <a href="@Url.Action("Index", "Sales")" class="btn btn-outline-primary">
                    <i class="fas fa-list me-1"></i>All Sales
                </a>
            </div>
        </div>
        <hr>
    </div>
</div>

<div class="row">
    <!-- Sale Summary -->
    <div class="col-lg-4 mb-4">
        <div class="card mb-4">
            <div class="card-header bg-primary text-white">
                <h5 class="mb-0">
                    <i class="fas fa-info-circle me-2"></i>Sale Summary
                </h5>
            </div>
            <div class="card-body">
                <div class="row mb-3">
                    <div class="col-sm-5">
                        <strong>Invoice #:</strong>
                    </div>
                    <div class="col-sm-7">
                        @Model.InvoiceNumber
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col-sm-5">
                        <strong>Date:</strong>
                    </div>
                    <div class="col-sm-7">
                        @Model.SaleDate.ToString("dd/MM/yyyy")
                        <br><small class="text-muted">@Model.SaleDate.ToString("HH:mm")</small>
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col-sm-5">
                        <strong>Customer:</strong>
                    </div>
                    <div class="col-sm-7">
                        @Model.CustomerDisplayName
                        @if (!string.IsNullOrEmpty(Model.CustomerPhone))
                        {
                            <br>

                            <small class="text-muted">@Model.CustomerPhone</small>
                        }
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col-sm-5">
                        <strong>Payment Method:</strong>
                    </div>
                    <div class="col-sm-7">
                        @Model.PaymentMethod
                        @if (!string.IsNullOrEmpty(Model.PaymentReference))
                        {
                            <br>

                            <small class="text-muted">Ref: @Model.PaymentReference</small>
                        }
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col-sm-5">
                        <strong>Items Count:</strong>
                    </div>
                    <div class="col-sm-7">
                        <span class="badge bg-info">@Model.ItemCount.ToString("0.###")</span>
                        <br><small class="text-muted">@Model.SaleItems.Count product(s)</small>
                    </div>
                </div>

                <hr>

                <!-- FIXED: Financial Summary - NO overall discount percentage shown -->
                <div class="row mb-2">
                    <div class="col-sm-5">Items Subtotal:</div>
                    <div class="col-sm-7 text-end">₹@Model.SubTotal.ToString("N2")</div>
                </div>

                <!-- CRITICAL FIX: Show only total discount AMOUNT, not percentage -->
                @if (Model.TotalItemDiscounts > 0)
                {
                    <div class="row mb-2">
                        <div class="col-sm-5 text-success">
                            <i class="fas fa-tag me-1"></i>Total Discounts:
                        </div>
                        <div class="col-sm-7 text-end text-success">-₹@Model.TotalItemDiscounts.ToString("N2")</div>
                    </div>
                }

                @if (Model.GSTAmount > 0)
                {
                    <div class="row mb-2">
                        <div class="col-sm-5">GST Amount:</div>
                        <div class="col-sm-7 text-end">₹@Model.GSTAmount.ToString("N2")</div>
                    </div>
                }

                @if (Model.GSTAmount > 0)
                {
                    <div class="row mb-2">
                        <div class="col-sm-5">GST Amount:</div>
                        <div class="col-sm-7 text-end">₹@Model.GSTAmount.ToString("N2")</div>
                    </div>
                }

                @{
                    var originalTotal = Model.SubTotal - Model.DiscountAmount + Model.GSTAmount;
                    var roundingAdjustment = originalTotal - Model.TotalAmount;
                }
                @if (roundingAdjustment != 0)
                {
                    <div class="row mb-2">
                        <div class="col-sm-5">Round off:</div>
                        @if(roundingAdjustment > 0)
                        {
                            <div class="col-sm-7 text-end">-₹@Math.Abs(roundingAdjustment).ToString("N2")</div>
                        }
                        else 
                        {
                            <div class="col-sm-7 text-end">₹@Math.Abs(roundingAdjustment).ToString("N2")</div>
                        }
                    </div>
                }

                <hr>

                <div class="row mb-3">
                    <div class="col-sm-5">
                        <strong>Final Total:</strong>
                    </div>
                    <div class="col-sm-7 text-end">
                        <h4 class="text-success mb-0">₹@Model.TotalAmount.ToString("N2")</h4>
                    </div>
                </div>

                @if (Model.ReturnedAmount > 0)
                {
                    <div class="row mb-2">
                        <div class="col-sm-5 text-warning">
                            <i class="fas fa-undo me-1"></i>Returned:
                        </div>
                        <div class="col-sm-7 text-end text-warning">-₹@Model.ReturnedAmount.ToString("N2")</div>
                    </div>

                    <div class="row mb-3">
                        <div class="col-sm-5">
                            <strong>Net Amount:</strong>
                        </div>
                        <div class="col-sm-7 text-end">
                            <h5 class="text-success mb-0">₹@Model.NetAmount.ToString("N2")</h5>
                        </div>
                    </div>
                }
            </div>
        </div>

        <div class="card shadow mb-4">
            <div class="card-header bg-info text-white d-flex justify-content-between align-items-center">
                <h5 class="mb-0">
                    <i class="fas fa-info-circle me-2"></i>Sale Status
                </h5>
                <!-- Current Status Display -->
                @switch (Model.Status)
                {
                    case "Completed":
                        <span class="badge bg-success fs-6">
                            <i class="fas fa-check me-1"></i>Completed
                        </span>
                        break;
                    case "Pending":
                        <span class="badge bg-warning fs-6">
                            <i class="fas fa-clock me-1"></i>Pending
                        </span>
                        break;
                    case "Cancelled":
                        <span class="badge bg-danger fs-6">
                            <i class="fas fa-times me-1"></i>Cancelled
                        </span>
                        break;
                    default:
                        <span class="badge bg-secondary fs-6">@Model.Status</span>
                        break;
                }
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-8">
                        <h6>Current Status: <strong>@Model.Status</strong></h6>
                        <p class="text-muted mb-3">
                            @switch (Model.Status)
                            {
                                case "Completed":
                                    <span>This sale has been completed and payment received.</span>
                                    break;
                                case "Pending":
                                    <span>This sale is pending completion or payment.</span>
                                    break;
                                case "Cancelled":
                                    <span>This sale has been cancelled.</span>
                                    break;
                                default:
                                    <span>Status: @Model.Status</span>
                                    break;
                            }
                        </p>

                        @if (Model.Status == "Completed")
                        {
                            <div class="alert alert-success">
                                <i class="fas fa-check-circle me-2"></i>
                                <strong>Sale completed successfully!</strong> Total amount: ₹@Model.TotalAmount.ToString("N2")
                                @if (roundingAdjustment != 0)
                                {
                                    <br>

                                    <small class="text-muted">
                                        <i class="fas fa-info-circle me-1"></i>
                                        Rounded down by ₹@Math.Abs(roundingAdjustment).ToString("N2") for customer convenience
                                    </small>
                                }
                            </div>
                        }
                    </div>
                    <div class="col-md-4">
                        <div class="d-grid gap-2">
                            @if (Model.Status != "Pending")
                            {
                                <button class="btn btn-warning" onclick="updateSaleStatus(@Model.Id, 'Pending')">
                                    <i class="fas fa-clock me-2"></i>Mark as Pending
                                </button>
                            }
                            @if (Model.Status != "Completed")
                            {
                                <button class="btn btn-success" onclick="updateSaleStatus(@Model.Id, 'Completed')">
                                    <i class="fas fa-check me-2"></i>Mark as Completed
                                </button>
                            }
                            @if (Model.Status != "Cancelled")
                            {
                                <button class="btn btn-danger" onclick="updateSaleStatus(@Model.Id, 'Cancelled')">
                                    <i class="fas fa-times me-2"></i>Mark as Cancelled
                                </button>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Sale Items with Individual Discounts -->
    <div class="col-lg-8 mb-4">
        <div class="card">
            <div class="card-header">
                <div class="d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">
                        <i class="fas fa-box me-2"></i>
                        Sale Items (@Model.SaleItems.Count)
                        @if (Model.HasItemLevelDiscounts)
                        {
                            <span class="badge bg-success ms-2">
                                <i class="fas fa-tag me-1"></i>@Model.ItemsWithDiscountCount with discounts
                            </span>
                        }
                    </h5>
                </div>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead class="table-light">
                            <tr>
                                <th>Product</th>
                                <th>Quantity</th>
                                <th>Unit Price</th>
                                <th>Subtotal</th>
                                <!-- CRITICAL FIX: Show item discount percentage and amount -->
                                <th>Item Discount</th>
                                <th>GST</th>
                                <th>Line Total</th>
                                @if (hasReturnableItems)
                                {
                                    <th>Returnable</th>
                                }
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.SaleItems)
                            {
                                <tr @(item.HasItemDiscount ? "class=table-success" : "")>
                                    <td>
                                        <div>
                                            <strong>@item.ProductName</strong>
                                            @if (item.Product != null)
                                            {
                                                <div class="mt-1">
                                                    @if (!string.IsNullOrEmpty(item.Product.Color))
                                                    {
                                                        <span class="badge bg-light text-dark me-1">@item.Product.Color</span>
                                                    }
                                                    @if (!string.IsNullOrEmpty(item.Product.Size))
                                                    {
                                                        <span class="badge bg-light text-dark">Size: @item.Product.Size</span>
                                                    }
                                                </div>
                                            }
                                        </div>
                                    </td>
                                    <td>
                                        <span class="badge bg-primary">
                                            @item.Quantity.ToString("0.###") @(item.UnitOfMeasure ?? "Piece")
                                        </span>
                                    </td>
                                    <td>
                                        <strong>₹@item.UnitPrice.ToString("N2")</strong>
                                        <br><small class="text-muted">per @(item.Product?.UnitOfMeasure ?? "piece")</small>
                                    </td>
                                    <td>
                                        <strong>₹@item.LineSubtotal.ToString("N2")</strong>
                                        <br><small class="text-muted">@item.Quantity.ToString("0.###") × ₹@item.UnitPrice.ToString("N2")</small>
                                    </td>
                                    <!-- CRITICAL FIX: Display individual item discount with percentage -->
                                    <td>
                                        @if (item.HasItemDiscount)
                                        {
                                            <div class="text-success">
                                                <strong>@item.ItemDiscountPercentage.ToString("0.##")%</strong>
                                                <br>
                                                <small>-₹@item.ItemDiscountAmount.ToString("N2")</small>
                                            </div>
                                        }
                                        else
                                        {
                                            <span class="text-muted">No Discount</span>
                                        }
                                    </td>
                                    <td>
                                        <div>
                                            <strong>@item.GSTRate%</strong>
                                            <br><small class="text-muted">₹@item.LineGSTAmount.ToString("N2")</small>
                                        </div>
                                    </td>
                                    <td>
                                        <strong class="text-success">₹@item.LineTotalWithDiscount.ToString("N2")</strong>
                                        @if (item.HasItemDiscount)
                                        {
                                            <br>

                                            <small class="text-muted">After @item.ItemDiscountPercentage.ToString("0.##")% discount</small>
                                        }
                                    </td>
                                    @if (hasReturnableItems)
                                    {
                                        <td>
                                            @if (returnableQuantities.ContainsKey(item.Id))
                                            {
                                                <span class="badge bg-warning text-dark">
                                                    @returnableQuantities[item.Id].ToString("0.###") @(item.UnitOfMeasure ?? "Piece")
                                                </span>
                                            }
                                            else
                                            {
                                                <span class="text-muted">None</span>
                                            }
                                        </td>
                                    }
                                </tr>
                            }
                        </tbody>
                        <tfoot class="table-light">
                            <tr>
                                <th colspan="3">Totals:</th>
                                <th>₹@Model.SubTotal.ToString("N2")</th>
                                <!-- CRITICAL FIX: Show total item discounts -->
                                <th class="text-success">
                                    @if (Model.TotalItemDiscounts > 0)
                                    {
                                        <text>-₹@Model.TotalItemDiscounts.ToString("N2")</text>
                                    }
                                    else
                                    {
                                        <text>₹0.00</text>
                                    }
                                </th>
                                <th>₹@Model.GSTAmount.ToString("N2")</th>
                                <th class="text-success">@("₹" + (Model.SubTotal - Model.DiscountAmount + Model.GSTAmount).ToString("N2"))</th>
                                @if (hasReturnableItems)
                                {
                                    <th></th>
                                }
                            </tr>
                        </tfoot>
                    </table>
                </div>

                <!-- ENHANCED: Discount Summary Information - NO overall percentage -->
                @if (Model.HasItemLevelDiscounts)
                {
                    <div class="alert alert-success mt-3">
                        <h6><i class="fas fa-tag me-2"></i>Discount Summary</h6>
                        <div class="row">
                            <div class="col-md-6">
                                <p class="mb-1">
                                    <strong>Items with Discounts:</strong> @Model.ItemsWithDiscountCount of @Model.SaleItems.Count
                                </p>
                                <p class="mb-1">
                                    <strong>Total Item Discounts:</strong> ₹@Model.TotalItemDiscounts.ToString("N2")
                                </p>
                            </div>
                            <div class="col-md-6">
                                <p class="mb-1">
                                    <strong>Average Item Discount:</strong> @Model.AverageDiscountPercentage.ToString("0.##")%
                                </p>
                                <p class="mb-1">
                                    <strong>Discount Savings:</strong> ₹@Model.TotalItemDiscounts.ToString("N2")
                                </p>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- Additional Information sections remain the same as before... -->
@section Scripts {
    <script>
        $(document).ready(function() {
            // Add hover effects to item rows
            $('tbody tr').hover(
                function() { $(this).addClass('table-active'); },
                function() { $(this).removeClass('table-active'); }
            );

            // Add tooltips to badges
            $('[title]').tooltip();

            // Highlight items with discounts are already styled with table-success class
        });

                function updateSaleStatus(saleId, newStatus) {
            let confirmMessage = `Are you sure you want to change the status to ${newStatus}?`;

            if (newStatus === 'Cancelled') {
                confirmMessage = 'Are you sure you want to cancel this sale? This action should be done carefully.';
            } else if (newStatus === 'Completed') {
                confirmMessage = 'Mark this sale as completed? This indicates payment has been received.';
            }

            if (confirm(confirmMessage)) {
                // Show loading state
                $('button').prop('disabled', true);

                $.post('@Url.Action("UpdateStatus")', {
                    id: saleId,
                    status: newStatus,
                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                })
                .done(function(response) {
                    if (response.success) {
                        // Show success message
                        showAlert('success', response.message);

                        // Reload page to reflect changes
                        setTimeout(function() {
                            location.reload();
                        }, 1000);
                    } else {
                        showAlert('error', response.message);
                        $('button').prop('disabled', false);
                    }
                })
                .fail(function() {
                    showAlert('error', 'Error updating sale status.');
                    $('button').prop('disabled', false);
                });
            }
        }

        function showAlert(type, message) {
            const alertClass = type === 'success' ? 'alert-success' : 'alert-danger';
            const alertHtml = `
                <div class="alert ${alertClass} alert-dismissible fade show" role="alert">
                    <i class="fas fa-${type === 'success' ? 'check' : 'exclamation-triangle'} me-2"></i>
                    ${message}
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            `;

            // Add to top of container
            $('.container-fluid').prepend(alertHtml);

            // Auto-remove after 3 seconds
            setTimeout(function() {
                $('.alert').fadeOut();
            }, 3000);
        }
    </script>
}

<style>
    .table td {
        vertical-align: middle;
    }

    .badge {
        font-size: 0.75rem;
    }

        .badge.bg-light {
            color: #495057 !important;
            border: 1px solid #dee2e6;
        }

    .card {
        box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
        border: 0;
    }

    .table-success {
        background-color: rgba(25, 135, 84, 0.05);
        border-left: 3px solid #198754;
    }

    .table-hover tbody tr:hover {
        background-color: rgba(0, 0, 0, 0.025);
    }

    .table-success:hover {
        background-color: rgba(25, 135, 84, 0.1) !important;
    }

    .text-success {
        color: #198754 !important;
    }

    .alert-success {
        border-left: 4px solid #198754;
    }
</style>